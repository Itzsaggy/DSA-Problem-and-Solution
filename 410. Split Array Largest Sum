 int isPossible(vector<int>& nums, int mid){
        int cnt=1, tempSum=0,n=nums.size();
        for(int i=0;i<n;i++){
            if(tempSum+nums[i]<=mid) tempSum+=nums[i];
            else cnt++,tempSum=nums[i];
        }
      
        return cnt;
    }

public:
    int splitArray(vector<int>& nums, int k) {
        int l=0,r=0,n=nums.size();
        for(int i=0;i<n;i++) l=max(l,nums[i]), r+=nums[i];
        int ans=r;
        while(l<=r){
            int mid=(l+r)/2;
            int count=isPossible(nums,mid);
            if(count<=k) r=mid-1, ans=mid;
            else l=mid+1;
        }
        return ans;
    }
